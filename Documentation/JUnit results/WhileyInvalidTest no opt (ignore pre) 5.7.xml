<?xml version="1.0" encoding="UTF-8"?><testrun name="WhileyInvalidTest" project="QuickCheckWhiley" tests="355" started="355" failures="0" errors="6" ignored="0">
  <testsuite name="test.quickcheck.WhileyInvalidTest" time="12.164">
    <testsuite name="[AddressExpression_Invalid_1]" time="0.087">
      <testcase name="invalid[AddressExpression_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.087"/>
    </testsuite>
    <testsuite name="[AddressExpression_Invalid_2]" time="0.016">
      <testcase name="invalid[AddressExpression_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.017"/>
    </testsuite>
    <testsuite name="[ArrayAccess_Invalid_1]" time="0.019">
      <testcase name="invalid[ArrayAccess_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.019"/>
    </testsuite>
    <testsuite name="[ArrayAccess_Invalid_2]" time="0.161">
      <testcase name="invalid[ArrayAccess_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.161"/>
    </testsuite>
    <testsuite name="[ArrayAccess_Invalid_3]" time="0.027">
      <testcase name="invalid[ArrayAccess_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.027"/>
    </testsuite>
    <testsuite name="[ArrayAccess_Invalid_4]" time="0.059">
      <testcase name="invalid[ArrayAccess_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.059"/>
    </testsuite>
    <testsuite name="[ArrayAccess_Invalid_5]" time="0.075">
      <testcase name="invalid[ArrayAccess_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.075"/>
    </testsuite>
    <testsuite name="[ArrayAssign_Invalid_1]" time="0.019">
      <testcase name="invalid[ArrayAssign_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.019"/>
    </testsuite>
    <testsuite name="[ArrayAssign_Invalid_2]" time="0.068">
      <testcase name="invalid[ArrayAssign_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.068"/>
    </testsuite>
    <testsuite name="[ArrayAssign_Invalid_3]" time="0.053">
      <testcase name="invalid[ArrayAssign_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.053"/>
    </testsuite>
    <testsuite name="[ArrayConversion_Invalid_1]" time="0.015">
      <testcase name="invalid[ArrayConversion_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[ArrayEmpty_Invalid_1]" time="0.015">
      <testcase name="invalid[ArrayEmpty_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[ArrayEmpty_Invalid_2]" time="0.06">
      <testcase name="invalid[ArrayEmpty_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.06"/>
    </testsuite>
    <testsuite name="[ArrayEquals_Invalid_1]" time="0.065">
      <testcase name="invalid[ArrayEquals_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.065"/>
    </testsuite>
    <testsuite name="[ArrayGenerator_Invalid_1]" time="0.045">
      <testcase name="invalid[ArrayGenerator_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.045"/>
    </testsuite>
    <testsuite name="[ArrayGenerator_Invalid_2]" time="0.045">
      <testcase name="invalid[ArrayGenerator_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.045"/>
    </testsuite>
    <testsuite name="[ArrayGenerator_Invalid_3]" time="0.017">
      <testcase name="invalid[ArrayGenerator_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.017"/>
    </testsuite>
    <testsuite name="[ArrayGenerator_Invalid_4]" time="0.013">
      <testcase name="invalid[ArrayGenerator_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[ArrayLength_Invalid_1]" time="0.05">
      <testcase name="invalid[ArrayLength_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.05"/>
    </testsuite>
    <testsuite name="[ArrayLength_Invalid_2]" time="0.064">
      <testcase name="invalid[ArrayLength_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.063"/>
    </testsuite>
    <testsuite name="[ArrayLength_Invalid_3]" time="0.055">
      <testcase name="invalid[ArrayLength_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.055"/>
    </testsuite>
    <testsuite name="[ArrayUpdate_Invalid_1]" time="0.036">
      <testcase name="invalid[ArrayUpdate_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.036">
        <error>java.lang.ArrayIndexOutOfBoundsException: 0&#13;
	at wyil.interpreter.ConcreteSemantics$RValue$Array.write(ConcreteSemantics.java:498)&#13;
	at wyil.interpreter.ConcreteSemantics$LValue$Array.write(ConcreteSemantics.java:837)&#13;
	at quickcheck.QCInterpreter.executeAssign(QCInterpreter.java:491)&#13;
	at quickcheck.QCInterpreter.executeStatement(QCInterpreter.java:441)&#13;
	at quickcheck.QCInterpreter.executeBlock(QCInterpreter.java:415)&#13;
	at quickcheck.QCInterpreter.execute(QCInterpreter.java:344)&#13;
	at quickcheck.RunTest.executeTest(RunTest.java:218)&#13;
	at quickcheck.RunTest.execute(RunTest.java:111)&#13;
	at test.utils.TestHelper.createRunTest(TestHelper.java:133)&#13;
	at test.quickcheck.WhileyInvalidTest.invalid(WhileyInvalidTest.java:133)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</error>
      </testcase>
    </testsuite>
    <testsuite name="[Array_Invalid_1]" time="0.015">
      <testcase name="invalid[Array_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[Array_Invalid_10]" time="0.089">
      <testcase name="invalid[Array_Invalid_10]" classname="test.quickcheck.WhileyInvalidTest" time="0.089">
        <error>java.lang.ArrayIndexOutOfBoundsException: 0&#13;
	at wyil.interpreter.ConcreteSemantics$RValue$Array.write(ConcreteSemantics.java:498)&#13;
	at wyil.interpreter.ConcreteSemantics$LValue$Array.write(ConcreteSemantics.java:837)&#13;
	at quickcheck.QCInterpreter.executeAssign(QCInterpreter.java:491)&#13;
	at quickcheck.QCInterpreter.executeStatement(QCInterpreter.java:441)&#13;
	at quickcheck.QCInterpreter.executeBlock(QCInterpreter.java:415)&#13;
	at quickcheck.QCInterpreter.execute(QCInterpreter.java:344)&#13;
	at quickcheck.RunTest.executeTest(RunTest.java:218)&#13;
	at quickcheck.RunTest.execute(RunTest.java:111)&#13;
	at test.utils.TestHelper.createRunTest(TestHelper.java:133)&#13;
	at test.quickcheck.WhileyInvalidTest.invalid(WhileyInvalidTest.java:140)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</error>
      </testcase>
    </testsuite>
    <testsuite name="[Array_Invalid_11]" time="0.118">
      <testcase name="invalid[Array_Invalid_11]" classname="test.quickcheck.WhileyInvalidTest" time="0.118"/>
    </testsuite>
    <testsuite name="[Array_Invalid_12]" time="0.094">
      <testcase name="invalid[Array_Invalid_12]" classname="test.quickcheck.WhileyInvalidTest" time="0.094"/>
    </testsuite>
    <testsuite name="[Array_Invalid_13]" time="0.065">
      <testcase name="invalid[Array_Invalid_13]" classname="test.quickcheck.WhileyInvalidTest" time="0.065"/>
    </testsuite>
    <testsuite name="[Array_Invalid_14]" time="0.095">
      <testcase name="invalid[Array_Invalid_14]" classname="test.quickcheck.WhileyInvalidTest" time="0.095"/>
    </testsuite>
    <testsuite name="[Array_Invalid_15]" time="0.113">
      <testcase name="invalid[Array_Invalid_15]" classname="test.quickcheck.WhileyInvalidTest" time="0.113"/>
    </testsuite>
    <testsuite name="[Array_Invalid_16]" time="0.092">
      <testcase name="invalid[Array_Invalid_16]" classname="test.quickcheck.WhileyInvalidTest" time="0.092"/>
    </testsuite>
    <testsuite name="[Array_Invalid_17]" time="0.063">
      <testcase name="invalid[Array_Invalid_17]" classname="test.quickcheck.WhileyInvalidTest" time="0.063"/>
    </testsuite>
    <testsuite name="[Array_Invalid_18]" time="0.086">
      <testcase name="invalid[Array_Invalid_18]" classname="test.quickcheck.WhileyInvalidTest" time="0.086"/>
    </testsuite>
    <testsuite name="[Array_Invalid_19]" time="0.043">
      <testcase name="invalid[Array_Invalid_19]" classname="test.quickcheck.WhileyInvalidTest" time="0.043"/>
    </testsuite>
    <testsuite name="[Array_Invalid_2]" time="0.018">
      <testcase name="invalid[Array_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.018"/>
    </testsuite>
    <testsuite name="[Array_Invalid_20]" time="0.126">
      <testcase name="invalid[Array_Invalid_20]" classname="test.quickcheck.WhileyInvalidTest" time="0.126"/>
    </testsuite>
    <testsuite name="[Array_Invalid_21]" time="0.103">
      <testcase name="invalid[Array_Invalid_21]" classname="test.quickcheck.WhileyInvalidTest" time="0.103"/>
    </testsuite>
    <testsuite name="[Array_Invalid_22]" time="0.094">
      <testcase name="invalid[Array_Invalid_22]" classname="test.quickcheck.WhileyInvalidTest" time="0.094"/>
    </testsuite>
    <testsuite name="[Array_Invalid_23]" time="0.072">
      <testcase name="invalid[Array_Invalid_23]" classname="test.quickcheck.WhileyInvalidTest" time="0.072"/>
    </testsuite>
    <testsuite name="[Array_Invalid_24]" time="0.075">
      <testcase name="invalid[Array_Invalid_24]" classname="test.quickcheck.WhileyInvalidTest" time="0.075"/>
    </testsuite>
    <testsuite name="[Array_Invalid_3]" time="0.019">
      <testcase name="invalid[Array_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.019"/>
    </testsuite>
    <testsuite name="[Array_Invalid_4]" time="0.019">
      <testcase name="invalid[Array_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.019"/>
    </testsuite>
    <testsuite name="[Array_Invalid_5]" time="0.019">
      <testcase name="invalid[Array_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.019"/>
    </testsuite>
    <testsuite name="[Array_Invalid_6]" time="0.016">
      <testcase name="invalid[Array_Invalid_6]" classname="test.quickcheck.WhileyInvalidTest" time="0.016"/>
    </testsuite>
    <testsuite name="[Array_Invalid_7]" time="0.017">
      <testcase name="invalid[Array_Invalid_7]" classname="test.quickcheck.WhileyInvalidTest" time="0.017"/>
    </testsuite>
    <testsuite name="[Array_Invalid_8]" time="0.06">
      <testcase name="invalid[Array_Invalid_8]" classname="test.quickcheck.WhileyInvalidTest" time="0.06"/>
    </testsuite>
    <testsuite name="[Array_Invalid_9]" time="0.055">
      <testcase name="invalid[Array_Invalid_9]" classname="test.quickcheck.WhileyInvalidTest" time="0.055"/>
    </testsuite>
    <testsuite name="[Assert_Invalid_1]" time="0.027">
      <testcase name="invalid[Assert_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.027"/>
    </testsuite>
    <testsuite name="[Assert_Invalid_2]" time="0.04">
      <testcase name="invalid[Assert_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.04"/>
    </testsuite>
    <testsuite name="[Assert_Invalid_3]" time="0.1">
      <testcase name="invalid[Assert_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.1"/>
    </testsuite>
    <testsuite name="[Assign_Invalid_1]" time="0.017">
      <testcase name="invalid[Assign_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.017"/>
    </testsuite>
    <testsuite name="[Assign_Invalid_2]" time="0.015">
      <testcase name="invalid[Assign_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[Assign_Invalid_3]" time="0.013">
      <testcase name="invalid[Assign_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Assign_Invalid_4]" time="0.014">
      <testcase name="invalid[Assign_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Assign_Invalid_5]" time="0.015">
      <testcase name="invalid[Assign_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[Assign_Invalid_6]" time="0.014">
      <testcase name="invalid[Assign_Invalid_6]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Assign_Invalid_7]" time="0.014">
      <testcase name="invalid[Assign_Invalid_7]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Assign_Invalid_8]" time="0.013">
      <testcase name="invalid[Assign_Invalid_8]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Assign_Invalid_9]" time="0.013">
      <testcase name="invalid[Assign_Invalid_9]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Byte_Invalid_1]" time="0.014">
      <testcase name="invalid[Byte_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Coercion_Invalid_2]" time="0.015">
      <testcase name="invalid[Coercion_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[Constant_Invalid_1]" time="0.014">
      <testcase name="invalid[Constant_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Constant_Invalid_2]" time="0.013">
      <testcase name="invalid[Constant_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[ConstrainedArray_Invalid_1]" time="0.057">
      <testcase name="invalid[ConstrainedArray_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.057"/>
    </testsuite>
    <testsuite name="[ConstrainedArray_Invalid_2]" time="0.104">
      <testcase name="invalid[ConstrainedArray_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.104"/>
    </testsuite>
    <testsuite name="[ConstrainedArray_Invalid_3]" time="0.062">
      <testcase name="invalid[ConstrainedArray_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.062"/>
    </testsuite>
    <testsuite name="[ConstrainedInt_Invalid_1]" time="0.049">
      <testcase name="invalid[ConstrainedInt_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.049"/>
    </testsuite>
    <testsuite name="[ConstrainedInt_Invalid_11]" time="0.015">
      <testcase name="invalid[ConstrainedInt_Invalid_11]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[ConstrainedInt_Invalid_12]" time="0.067">
      <testcase name="invalid[ConstrainedInt_Invalid_12]" classname="test.quickcheck.WhileyInvalidTest" time="0.067"/>
    </testsuite>
    <testsuite name="[ConstrainedInt_Invalid_2]" time="0.046">
      <testcase name="invalid[ConstrainedInt_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.046"/>
    </testsuite>
    <testsuite name="[ConstrainedInt_Invalid_3]" time="0.052">
      <testcase name="invalid[ConstrainedInt_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.052"/>
    </testsuite>
    <testsuite name="[ConstrainedInt_Invalid_4]" time="0.059">
      <testcase name="invalid[ConstrainedInt_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.059"/>
    </testsuite>
    <testsuite name="[ConstrainedInt_Invalid_5]" time="0.067">
      <testcase name="invalid[ConstrainedInt_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.067"/>
    </testsuite>
    <testsuite name="[ConstrainedInt_Invalid_6]" time="0.069">
      <testcase name="invalid[ConstrainedInt_Invalid_6]" classname="test.quickcheck.WhileyInvalidTest" time="0.069"/>
    </testsuite>
    <testsuite name="[ConstrainedInt_Invalid_7]" time="0.054">
      <testcase name="invalid[ConstrainedInt_Invalid_7]" classname="test.quickcheck.WhileyInvalidTest" time="0.054"/>
    </testsuite>
    <testsuite name="[ConstrainedInt_Invalid_8]" time="0.06">
      <testcase name="invalid[ConstrainedInt_Invalid_8]" classname="test.quickcheck.WhileyInvalidTest" time="0.06"/>
    </testsuite>
    <testsuite name="[ConstrainedInt_Invalid_9]" time="0.117">
      <testcase name="invalid[ConstrainedInt_Invalid_9]" classname="test.quickcheck.WhileyInvalidTest" time="0.117"/>
    </testsuite>
    <testsuite name="[ConstrainedRecord_Invalid_1]" time="0.058">
      <testcase name="invalid[ConstrainedRecord_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.057"/>
    </testsuite>
    <testsuite name="[Continue_Invalid_1]" time="0.013">
      <testcase name="invalid[Continue_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Continue_Invalid_2]" time="0.013">
      <testcase name="invalid[Continue_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[DefiniteAssign_Invalid_1]" time="0.014">
      <testcase name="invalid[DefiniteAssign_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[DefiniteAssign_Invalid_2]" time="0.015">
      <testcase name="invalid[DefiniteAssign_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[DefiniteAssign_Invalid_3]" time="0.014">
      <testcase name="invalid[DefiniteAssign_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[DefiniteAssign_Invalid_4]" time="0.014">
      <testcase name="invalid[DefiniteAssign_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[DoWhile_Invalid_1]" time="0.048">
      <testcase name="invalid[DoWhile_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.048"/>
    </testsuite>
    <testsuite name="[DoWhile_Invalid_2]" time="0.046">
      <testcase name="invalid[DoWhile_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.046"/>
    </testsuite>
    <testsuite name="[DoWhile_Invalid_3]" time="0.069">
      <testcase name="invalid[DoWhile_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.069"/>
    </testsuite>
    <testsuite name="[DoWhile_Invalid_4]" time="0.003">
      <testcase name="invalid[DoWhile_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.003">
        <skipped>org.junit.AssumptionViolatedException: Test DoWhile_Invalid_4 skipped: Infinite loop!&#13;
	at org.junit.Assume.assumeTrue(Assume.java:59)&#13;
	at test.quickcheck.WhileyInvalidTest.beforeMethod(WhileyInvalidTest.java:107)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</skipped>
      </testcase>
    </testsuite>
    <testsuite name="[DoWhile_Invalid_5]" time="0.019">
      <testcase name="invalid[DoWhile_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.019"/>
    </testsuite>
    <testsuite name="[DoWhile_Invalid_6]" time="0.183">
      <testcase name="invalid[DoWhile_Invalid_6]" classname="test.quickcheck.WhileyInvalidTest" time="0.183"/>
    </testsuite>
    <testsuite name="[DoWhile_Invalid_7]" time="0.079">
      <testcase name="invalid[DoWhile_Invalid_7]" classname="test.quickcheck.WhileyInvalidTest" time="0.079"/>
    </testsuite>
    <testsuite name="[DoWhile_Invalid_8]" time="0.143">
      <testcase name="invalid[DoWhile_Invalid_8]" classname="test.quickcheck.WhileyInvalidTest" time="0.143"/>
    </testsuite>
    <testsuite name="[EndOfFile_Invalid_1]" time="0.014">
      <testcase name="invalid[EndOfFile_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Ensures_Invalid_1]" time="0.037">
      <testcase name="invalid[Ensures_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.037"/>
    </testsuite>
    <testsuite name="[Ensures_Invalid_2]" time="0.015">
      <testcase name="invalid[Ensures_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[Ensures_Invalid_3]" time="0.062">
      <testcase name="invalid[Ensures_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.062"/>
    </testsuite>
    <testsuite name="[Export_Invalid_1]" time="0.001">
      <testcase name="invalid[Export_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.001">
        <skipped>org.junit.AssumptionViolatedException: Test Export_Invalid_1 skipped: unclassified&#13;
	at org.junit.Assume.assumeTrue(Assume.java:59)&#13;
	at test.quickcheck.WhileyInvalidTest.beforeMethod(WhileyInvalidTest.java:107)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</skipped>
      </testcase>
    </testsuite>
    <testsuite name="[Fail_Invalid_1]" time="0.049">
      <testcase name="invalid[Fail_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.049"/>
    </testsuite>
    <testsuite name="[Fail_Invalid_2]" time="0.023">
      <testcase name="invalid[Fail_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.023"/>
    </testsuite>
    <testsuite name="[Fail_Invalid_3]" time="0.031">
      <testcase name="invalid[Fail_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.031"/>
    </testsuite>
    <testsuite name="[Final_Invalid_1]" time="0.031">
      <testcase name="invalid[Final_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.031"/>
    </testsuite>
    <testsuite name="[Final_Invalid_10]" time="0.018">
      <testcase name="invalid[Final_Invalid_10]" classname="test.quickcheck.WhileyInvalidTest" time="0.018"/>
    </testsuite>
    <testsuite name="[Final_Invalid_11]" time="0.026">
      <testcase name="invalid[Final_Invalid_11]" classname="test.quickcheck.WhileyInvalidTest" time="0.026"/>
    </testsuite>
    <testsuite name="[Final_Invalid_12]" time="0.016">
      <testcase name="invalid[Final_Invalid_12]" classname="test.quickcheck.WhileyInvalidTest" time="0.016"/>
    </testsuite>
    <testsuite name="[Final_Invalid_13]" time="0.015">
      <testcase name="invalid[Final_Invalid_13]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[Final_Invalid_14]" time="0.016">
      <testcase name="invalid[Final_Invalid_14]" classname="test.quickcheck.WhileyInvalidTest" time="0.016"/>
    </testsuite>
    <testsuite name="[Final_Invalid_15]" time="0.018">
      <testcase name="invalid[Final_Invalid_15]" classname="test.quickcheck.WhileyInvalidTest" time="0.018"/>
    </testsuite>
    <testsuite name="[Final_Invalid_2]" time="0.015">
      <testcase name="invalid[Final_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[Final_Invalid_3]" time="0.013">
      <testcase name="invalid[Final_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Final_Invalid_4]" time="0.014">
      <testcase name="invalid[Final_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Final_Invalid_5]" time="0.014">
      <testcase name="invalid[Final_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Final_Invalid_6]" time="0.014">
      <testcase name="invalid[Final_Invalid_6]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Final_Invalid_7]" time="0.014">
      <testcase name="invalid[Final_Invalid_7]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Final_Invalid_8]" time="0.014">
      <testcase name="invalid[Final_Invalid_8]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Final_Invalid_9]" time="0.015">
      <testcase name="invalid[Final_Invalid_9]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[FunctionRef_Invalid_1]" time="0.016">
      <testcase name="invalid[FunctionRef_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.016"/>
    </testsuite>
    <testsuite name="[FunctionRef_Invalid_2]" time="0.014">
      <testcase name="invalid[FunctionRef_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[FunctionRef_Invalid_3]" time="0.014">
      <testcase name="invalid[FunctionRef_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[FunctionRef_Invalid_4]" time="0.015">
      <testcase name="invalid[FunctionRef_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[FunctionRef_Invalid_5]" time="0.016">
      <testcase name="invalid[FunctionRef_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.016"/>
    </testsuite>
    <testsuite name="[FunctionRef_Invalid_6]" time="0.013">
      <testcase name="invalid[FunctionRef_Invalid_6]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[FunctionRef_Invalid_7]" time="0.013">
      <testcase name="invalid[FunctionRef_Invalid_7]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Function_Invalid_1]" time="0.013">
      <testcase name="invalid[Function_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Function_Invalid_10]" time="0.013">
      <testcase name="invalid[Function_Invalid_10]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Function_Invalid_11]" time="0.014">
      <testcase name="invalid[Function_Invalid_11]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Function_Invalid_12]" time="0.014">
      <testcase name="invalid[Function_Invalid_12]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Function_Invalid_13]" time="0.013">
      <testcase name="invalid[Function_Invalid_13]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Function_Invalid_2]" time="0.001">
      <testcase name="invalid[Function_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.001">
        <skipped>org.junit.AssumptionViolatedException: Test Function_Invalid_2 skipped: unclassified&#13;
	at org.junit.Assume.assumeTrue(Assume.java:59)&#13;
	at test.quickcheck.WhileyInvalidTest.beforeMethod(WhileyInvalidTest.java:107)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</skipped>
      </testcase>
    </testsuite>
    <testsuite name="[Function_Invalid_3]" time="0.013">
      <testcase name="invalid[Function_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Function_Invalid_4]" time="0.014">
      <testcase name="invalid[Function_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Function_Invalid_9]" time="0.0">
      <testcase name="invalid[Function_Invalid_9]" classname="test.quickcheck.WhileyInvalidTest" time="0.0">
        <skipped>org.junit.AssumptionViolatedException: Test Function_Invalid_9 skipped: unclassified&#13;
	at org.junit.Assume.assumeTrue(Assume.java:59)&#13;
	at test.quickcheck.WhileyInvalidTest.beforeMethod(WhileyInvalidTest.java:107)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</skipped>
      </testcase>
    </testsuite>
    <testsuite name="[If_Invalid_1]" time="0.014">
      <testcase name="invalid[If_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[If_Invalid_2]" time="0.013">
      <testcase name="invalid[If_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[If_Invalid_4]" time="0.0">
      <testcase name="invalid[If_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.0"/>
    </testsuite>
    <testsuite name="[If_Invalid_5]" time="0.0">
      <testcase name="invalid[If_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.0"/>
    </testsuite>
    <testsuite name="[Import_Invalid_1]" time="0.024">
      <testcase name="invalid[Import_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.024"/>
    </testsuite>
    <testsuite name="[IntDiv_Invalid_1]" time="0.062">
      <testcase name="invalid[IntDiv_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.062">
        <error>java.lang.ArithmeticException: BigInteger divide by zero&#13;
	at java.base/java.math.MutableBigInteger.divideKnuth(Unknown Source)&#13;
	at java.base/java.math.BigInteger.divideKnuth(Unknown Source)&#13;
	at java.base/java.math.BigInteger.divide(Unknown Source)&#13;
	at wyil.interpreter.ConcreteSemantics$RValue$Int.divide(ConcreteSemantics.java:407)&#13;
	at wyil.interpreter.Interpreter.executeIntegerDivision(Interpreter.java:911)&#13;
	at quickcheck.QCInterpreter.executeExpression(QCInterpreter.java:870)&#13;
	at quickcheck.QCInterpreter.executeMultiReturnExpression(QCInterpreter.java:1151)&#13;
	at quickcheck.QCInterpreter.executeExpressions(QCInterpreter.java:1114)&#13;
	at quickcheck.QCInterpreter.executeAssign(QCInterpreter.java:488)&#13;
	at quickcheck.QCInterpreter.executeStatement(QCInterpreter.java:441)&#13;
	at quickcheck.QCInterpreter.executeBlock(QCInterpreter.java:415)&#13;
	at quickcheck.QCInterpreter.execute(QCInterpreter.java:344)&#13;
	at quickcheck.RunTest.executeTest(RunTest.java:218)&#13;
	at quickcheck.RunTest.execute(RunTest.java:111)&#13;
	at test.utils.TestHelper.createRunTest(TestHelper.java:133)&#13;
	at test.quickcheck.WhileyInvalidTest.invalid(WhileyInvalidTest.java:140)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</error>
      </testcase>
    </testsuite>
    <testsuite name="[Intersection_Invalid_1]" time="0.015">
      <testcase name="invalid[Intersection_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[Intersection_Invalid_2]" time="0.014">
      <testcase name="invalid[Intersection_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Lambda_Invalid_3]" time="0.065">
      <testcase name="invalid[Lambda_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.065"/>
    </testsuite>
    <testsuite name="[Lifetime_Invalid_1]" time="0.013">
      <testcase name="invalid[Lifetime_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Lifetime_Invalid_2]" time="0.012">
      <testcase name="invalid[Lifetime_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.012"/>
    </testsuite>
    <testsuite name="[Lifetime_Invalid_3]" time="0.013">
      <testcase name="invalid[Lifetime_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Lifetime_Invalid_4]" time="0.014">
      <testcase name="invalid[Lifetime_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Lifetime_Invalid_5]" time="0.015">
      <testcase name="invalid[Lifetime_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[Lifetime_Invalid_6]" time="0.012">
      <testcase name="invalid[Lifetime_Invalid_6]" classname="test.quickcheck.WhileyInvalidTest" time="0.012"/>
    </testsuite>
    <testsuite name="[Lifetime_Invalid_7]" time="0.014">
      <testcase name="invalid[Lifetime_Invalid_7]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Lifetime_Invalid_8]" time="0.013">
      <testcase name="invalid[Lifetime_Invalid_8]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Lifetime_Invalid_9]" time="0.015">
      <testcase name="invalid[Lifetime_Invalid_9]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[Lifetime_Lambda_Invalid_1]" time="0.0">
      <testcase name="invalid[Lifetime_Lambda_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.0"/>
    </testsuite>
    <testsuite name="[Lifetime_Lambda_Invalid_2]" time="0.011">
      <testcase name="invalid[Lifetime_Lambda_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.011"/>
    </testsuite>
    <testsuite name="[Lifetime_Lambda_Invalid_3]" time="0.001">
      <testcase name="invalid[Lifetime_Lambda_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.001">
        <skipped>org.junit.AssumptionViolatedException: Test Lifetime_Lambda_Invalid_3 skipped: #794&#13;
	at org.junit.Assume.assumeTrue(Assume.java:59)&#13;
	at test.quickcheck.WhileyInvalidTest.beforeMethod(WhileyInvalidTest.java:107)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</skipped>
      </testcase>
    </testsuite>
    <testsuite name="[Lifetime_Lambda_Invalid_4]" time="0.014">
      <testcase name="invalid[Lifetime_Lambda_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Lifetime_Lambda_Invalid_5]" time="0.0">
      <testcase name="invalid[Lifetime_Lambda_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.0">
        <skipped>org.junit.AssumptionViolatedException: Test Lifetime_Lambda_Invalid_5 skipped: #795&#13;
	at org.junit.Assume.assumeTrue(Assume.java:59)&#13;
	at test.quickcheck.WhileyInvalidTest.beforeMethod(WhileyInvalidTest.java:107)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</skipped>
      </testcase>
    </testsuite>
    <testsuite name="[Lifetime_Lambda_Invalid_6]" time="0.001">
      <testcase name="invalid[Lifetime_Lambda_Invalid_6]" classname="test.quickcheck.WhileyInvalidTest" time="0.001">
        <skipped>org.junit.AssumptionViolatedException: Test Lifetime_Lambda_Invalid_6 skipped: #765&#13;
	at org.junit.Assume.assumeTrue(Assume.java:59)&#13;
	at test.quickcheck.WhileyInvalidTest.beforeMethod(WhileyInvalidTest.java:107)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</skipped>
      </testcase>
    </testsuite>
    <testsuite name="[MethodCall_Invalid_1]" time="0.017">
      <testcase name="invalid[MethodCall_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.017"/>
    </testsuite>
    <testsuite name="[MethodCall_Invalid_2]" time="0.017">
      <testcase name="invalid[MethodCall_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.017"/>
    </testsuite>
    <testsuite name="[MethodCall_Invalid_3]" time="0.015">
      <testcase name="invalid[MethodCall_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[MethodCall_Invalid_4]" time="0.013">
      <testcase name="invalid[MethodCall_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[MethodCall_Invalid_5]" time="0.014">
      <testcase name="invalid[MethodCall_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[MethodCall_Invalid_6]" time="0.013">
      <testcase name="invalid[MethodCall_Invalid_6]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[MethodCall_Invalid_7]" time="0.012">
      <testcase name="invalid[MethodCall_Invalid_7]" classname="test.quickcheck.WhileyInvalidTest" time="0.012"/>
    </testsuite>
    <testsuite name="[MethodCall_Invalid_8]" time="0.013">
      <testcase name="invalid[MethodCall_Invalid_8]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[MethodRef_Invalid_1]" time="0.013">
      <testcase name="invalid[MethodRef_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[MethodRef_Invalid_2]" time="0.012">
      <testcase name="invalid[MethodRef_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.012"/>
    </testsuite>
    <testsuite name="[MethodRef_Invalid_3]" time="0.013">
      <testcase name="invalid[MethodRef_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Method_Invalid_9]" time="0.014">
      <testcase name="invalid[Method_Invalid_9]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[MultiAssign_Invalid_1]" time="0.014">
      <testcase name="invalid[MultiAssign_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Native_Invalid_1]" time="0.001">
      <testcase name="invalid[Native_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.001">
        <skipped>org.junit.AssumptionViolatedException: Test Native_Invalid_1 skipped: unclassified&#13;
	at org.junit.Assume.assumeTrue(Assume.java:59)&#13;
	at test.quickcheck.WhileyInvalidTest.beforeMethod(WhileyInvalidTest.java:107)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</skipped>
      </testcase>
    </testsuite>
    <testsuite name="[NegationType_Invalid_1]" time="0.013">
      <testcase name="invalid[NegationType_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[NegationType_Invalid_2]" time="0.012">
      <testcase name="invalid[NegationType_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.012"/>
    </testsuite>
    <testsuite name="[NegationType_Invalid_3]" time="0.016">
      <testcase name="invalid[NegationType_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.016"/>
    </testsuite>
    <testsuite name="[NegationType_Invalid_4]" time="0.001">
      <testcase name="invalid[NegationType_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.001"/>
    </testsuite>
    <testsuite name="[OpenRecord_Invalid_1]" time="0.0">
      <testcase name="invalid[OpenRecord_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.0"/>
    </testsuite>
    <testsuite name="[OpenRecord_Invalid_2]" time="0.0">
      <testcase name="invalid[OpenRecord_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.0"/>
    </testsuite>
    <testsuite name="[OpenRecord_Invalid_3]" time="0.0">
      <testcase name="invalid[OpenRecord_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.0"/>
    </testsuite>
    <testsuite name="[OpenRecord_Invalid_4]" time="0.0">
      <testcase name="invalid[OpenRecord_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.0"/>
    </testsuite>
    <testsuite name="[OpenRecord_Invalid_5]" time="0.0">
      <testcase name="invalid[OpenRecord_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.0"/>
    </testsuite>
    <testsuite name="[OpenRecord_Invalid_6]" time="0.0">
      <testcase name="invalid[OpenRecord_Invalid_6]" classname="test.quickcheck.WhileyInvalidTest" time="0.0"/>
    </testsuite>
    <testsuite name="[OpenRecord_Invalid_7]" time="0.007">
      <testcase name="invalid[OpenRecord_Invalid_7]" classname="test.quickcheck.WhileyInvalidTest" time="0.007"/>
    </testsuite>
    <testsuite name="[Parameter_Invalid_1]" time="0.016">
      <testcase name="invalid[Parameter_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.016"/>
    </testsuite>
    <testsuite name="[Parameter_Invalid_2]" time="0.018">
      <testcase name="invalid[Parameter_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.018"/>
    </testsuite>
    <testsuite name="[Parsing_Invalid_1]" time="0.001">
      <testcase name="invalid[Parsing_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.001">
        <skipped>org.junit.AssumptionViolatedException: Test Parsing_Invalid_1 skipped: 608&#13;
	at org.junit.Assume.assumeTrue(Assume.java:59)&#13;
	at test.quickcheck.WhileyInvalidTest.beforeMethod(WhileyInvalidTest.java:107)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</skipped>
      </testcase>
    </testsuite>
    <testsuite name="[Parsing_Invalid_10]" time="0.014">
      <testcase name="invalid[Parsing_Invalid_10]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Parsing_Invalid_11]" time="0.014">
      <testcase name="invalid[Parsing_Invalid_11]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Parsing_Invalid_12]" time="0.013">
      <testcase name="invalid[Parsing_Invalid_12]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Parsing_Invalid_15]" time="0.0">
      <testcase name="invalid[Parsing_Invalid_15]" classname="test.quickcheck.WhileyInvalidTest" time="0.0">
        <skipped>org.junit.AssumptionViolatedException: Test Parsing_Invalid_15 skipped: 609&#13;
	at org.junit.Assume.assumeTrue(Assume.java:59)&#13;
	at test.quickcheck.WhileyInvalidTest.beforeMethod(WhileyInvalidTest.java:107)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</skipped>
      </testcase>
    </testsuite>
    <testsuite name="[Parsing_Invalid_16]" time="0.013">
      <testcase name="invalid[Parsing_Invalid_16]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Parsing_Invalid_2]" time="0.0">
      <testcase name="invalid[Parsing_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.0">
        <skipped>org.junit.AssumptionViolatedException: Test Parsing_Invalid_2 skipped: 608&#13;
	at org.junit.Assume.assumeTrue(Assume.java:59)&#13;
	at test.quickcheck.WhileyInvalidTest.beforeMethod(WhileyInvalidTest.java:107)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</skipped>
      </testcase>
    </testsuite>
    <testsuite name="[Parsing_Invalid_21]" time="0.013">
      <testcase name="invalid[Parsing_Invalid_21]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Parsing_Invalid_23]" time="0.013">
      <testcase name="invalid[Parsing_Invalid_23]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Parsing_Invalid_24]" time="0.012">
      <testcase name="invalid[Parsing_Invalid_24]" classname="test.quickcheck.WhileyInvalidTest" time="0.012"/>
    </testsuite>
    <testsuite name="[Parsing_Invalid_25]" time="0.013">
      <testcase name="invalid[Parsing_Invalid_25]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Parsing_Invalid_26]" time="0.012">
      <testcase name="invalid[Parsing_Invalid_26]" classname="test.quickcheck.WhileyInvalidTest" time="0.012"/>
    </testsuite>
    <testsuite name="[Parsing_Invalid_27]" time="0.001">
      <testcase name="invalid[Parsing_Invalid_27]" classname="test.quickcheck.WhileyInvalidTest" time="0.001">
        <skipped>org.junit.AssumptionViolatedException: Test Parsing_Invalid_27 skipped: 609&#13;
	at org.junit.Assume.assumeTrue(Assume.java:59)&#13;
	at test.quickcheck.WhileyInvalidTest.beforeMethod(WhileyInvalidTest.java:107)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</skipped>
      </testcase>
    </testsuite>
    <testsuite name="[Parsing_Invalid_28]" time="0.0">
      <testcase name="invalid[Parsing_Invalid_28]" classname="test.quickcheck.WhileyInvalidTest" time="0.0">
        <skipped>org.junit.AssumptionViolatedException: Test Parsing_Invalid_28 skipped: 609&#13;
	at org.junit.Assume.assumeTrue(Assume.java:59)&#13;
	at test.quickcheck.WhileyInvalidTest.beforeMethod(WhileyInvalidTest.java:107)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</skipped>
      </testcase>
    </testsuite>
    <testsuite name="[Parsing_Invalid_29]" time="0.013">
      <testcase name="invalid[Parsing_Invalid_29]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Parsing_Invalid_30]" time="0.012">
      <testcase name="invalid[Parsing_Invalid_30]" classname="test.quickcheck.WhileyInvalidTest" time="0.012"/>
    </testsuite>
    <testsuite name="[Parsing_Invalid_31]" time="0.012">
      <testcase name="invalid[Parsing_Invalid_31]" classname="test.quickcheck.WhileyInvalidTest" time="0.012"/>
    </testsuite>
    <testsuite name="[Parsing_Invalid_4]" time="0.012">
      <testcase name="invalid[Parsing_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.012"/>
    </testsuite>
    <testsuite name="[Parsing_Invalid_5]" time="0.011">
      <testcase name="invalid[Parsing_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.011"/>
    </testsuite>
    <testsuite name="[Parsing_Invalid_6]" time="0.013">
      <testcase name="invalid[Parsing_Invalid_6]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Parsing_Invalid_8]" time="0.012">
      <testcase name="invalid[Parsing_Invalid_8]" classname="test.quickcheck.WhileyInvalidTest" time="0.012"/>
    </testsuite>
    <testsuite name="[ProcessAccess_Invalid_1]" time="0.014">
      <testcase name="invalid[ProcessAccess_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[ProcessAccess_Invalid_2]" time="0.0">
      <testcase name="invalid[ProcessAccess_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.0"/>
    </testsuite>
    <testsuite name="[ProcessAccess_Invalid_3]" time="0.0">
      <testcase name="invalid[ProcessAccess_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.0"/>
    </testsuite>
    <testsuite name="[Process_Invalid_1]" time="0.0">
      <testcase name="invalid[Process_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.0"/>
    </testsuite>
    <testsuite name="[Property_Invalid_1]" time="0.0">
      <testcase name="invalid[Property_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.0"/>
    </testsuite>
    <testsuite name="[Property_Invalid_2]" time="0.016">
      <testcase name="invalid[Property_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.016"/>
    </testsuite>
    <testsuite name="[Property_Invalid_3]" time="0.073">
      <testcase name="invalid[Property_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.073"/>
    </testsuite>
    <testsuite name="[Property_Invalid_4]" time="0.072">
      <testcase name="invalid[Property_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.072"/>
    </testsuite>
    <testsuite name="[Property_Invalid_5]" time="0.013">
      <testcase name="invalid[Property_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Property_Invalid_6]" time="0.013">
      <testcase name="invalid[Property_Invalid_6]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Property_Invalid_7]" time="0.014">
      <testcase name="invalid[Property_Invalid_7]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Property_Invalid_8]" time="0.131">
      <testcase name="invalid[Property_Invalid_8]" classname="test.quickcheck.WhileyInvalidTest" time="0.131"/>
    </testsuite>
    <testsuite name="[Quantifiers_Invalid_1]" time="0.054">
      <testcase name="invalid[Quantifiers_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.054"/>
    </testsuite>
    <testsuite name="[Quantifiers_Invalid_2]" time="0.053">
      <testcase name="invalid[Quantifiers_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.053"/>
    </testsuite>
    <testsuite name="[Quantifiers_Invalid_3]" time="0.06">
      <testcase name="invalid[Quantifiers_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.06"/>
    </testsuite>
    <testsuite name="[Quantifiers_Invalid_4]" time="0.063">
      <testcase name="invalid[Quantifiers_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.063"/>
    </testsuite>
    <testsuite name="[Quantifiers_Invalid_5]" time="0.053">
      <testcase name="invalid[Quantifiers_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.053"/>
    </testsuite>
    <testsuite name="[Quantifiers_Invalid_6]" time="0.053">
      <testcase name="invalid[Quantifiers_Invalid_6]" classname="test.quickcheck.WhileyInvalidTest" time="0.053"/>
    </testsuite>
    <testsuite name="[Quantifiers_Invalid_7]" time="0.12">
      <testcase name="invalid[Quantifiers_Invalid_7]" classname="test.quickcheck.WhileyInvalidTest" time="0.12"/>
    </testsuite>
    <testsuite name="[Quantifiers_Invalid_8]" time="0.072">
      <testcase name="invalid[Quantifiers_Invalid_8]" classname="test.quickcheck.WhileyInvalidTest" time="0.072"/>
    </testsuite>
    <testsuite name="[Record_Invalid_1]" time="0.029">
      <testcase name="invalid[Record_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.028"/>
    </testsuite>
    <testsuite name="[Record_Invalid_2]" time="0.03">
      <testcase name="invalid[Record_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.03"/>
    </testsuite>
    <testsuite name="[Record_Invalid_3]" time="0.027">
      <testcase name="invalid[Record_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.027"/>
    </testsuite>
    <testsuite name="[Record_Invalid_4]" time="0.026">
      <testcase name="invalid[Record_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.026"/>
    </testsuite>
    <testsuite name="[Record_Invalid_5]" time="0.028">
      <testcase name="invalid[Record_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.028"/>
    </testsuite>
    <testsuite name="[Record_Invalid_6]" time="0.032">
      <testcase name="invalid[Record_Invalid_6]" classname="test.quickcheck.WhileyInvalidTest" time="0.032"/>
    </testsuite>
    <testsuite name="[RecursiveType_Invalid_1]" time="0.085">
      <testcase name="invalid[RecursiveType_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.085"/>
    </testsuite>
    <testsuite name="[RecursiveType_Invalid_10]" time="0.053">
      <testcase name="invalid[RecursiveType_Invalid_10]" classname="test.quickcheck.WhileyInvalidTest" time="0.053"/>
    </testsuite>
    <testsuite name="[RecursiveType_Invalid_11]" time="0.018">
      <testcase name="invalid[RecursiveType_Invalid_11]" classname="test.quickcheck.WhileyInvalidTest" time="0.018"/>
    </testsuite>
    <testsuite name="[RecursiveType_Invalid_2]" time="0.0">
      <testcase name="invalid[RecursiveType_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.0">
        <skipped>org.junit.AssumptionViolatedException: Test RecursiveType_Invalid_2 skipped: WyTP#26&#13;
	at org.junit.Assume.assumeTrue(Assume.java:59)&#13;
	at test.quickcheck.WhileyInvalidTest.beforeMethod(WhileyInvalidTest.java:107)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</skipped>
      </testcase>
    </testsuite>
    <testsuite name="[RecursiveType_Invalid_3]" time="0.019">
      <testcase name="invalid[RecursiveType_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.019"/>
    </testsuite>
    <testsuite name="[RecursiveType_Invalid_4]" time="0.134">
      <testcase name="invalid[RecursiveType_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.134"/>
    </testsuite>
    <testsuite name="[RecursiveType_Invalid_5]" time="0.018">
      <testcase name="invalid[RecursiveType_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.018"/>
    </testsuite>
    <testsuite name="[RecursiveType_Invalid_7]" time="0.124">
      <testcase name="invalid[RecursiveType_Invalid_7]" classname="test.quickcheck.WhileyInvalidTest" time="0.124"/>
    </testsuite>
    <testsuite name="[RecursiveType_Invalid_8]" time="0.147">
      <testcase name="invalid[RecursiveType_Invalid_8]" classname="test.quickcheck.WhileyInvalidTest" time="0.147"/>
    </testsuite>
    <testsuite name="[RecursiveType_Invalid_9]" time="0.001">
      <testcase name="invalid[RecursiveType_Invalid_9]" classname="test.quickcheck.WhileyInvalidTest" time="0.001">
        <skipped>org.junit.AssumptionViolatedException: Test RecursiveType_Invalid_9 skipped: unclassified&#13;
	at org.junit.Assume.assumeTrue(Assume.java:59)&#13;
	at test.quickcheck.WhileyInvalidTest.beforeMethod(WhileyInvalidTest.java:107)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</skipped>
      </testcase>
    </testsuite>
    <testsuite name="[Reference_Subtype_Variant_Invalid_1]" time="0.015">
      <testcase name="invalid[Reference_Subtype_Variant_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[Remainder_Invalid_1]" time="0.05">
      <testcase name="invalid[Remainder_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.05">
        <error>java.lang.ArithmeticException: BigInteger divide by zero&#13;
	at java.base/java.math.MutableBigInteger.divideKnuth(Unknown Source)&#13;
	at java.base/java.math.MutableBigInteger.divideKnuth(Unknown Source)&#13;
	at java.base/java.math.BigInteger.remainderKnuth(Unknown Source)&#13;
	at java.base/java.math.BigInteger.remainder(Unknown Source)&#13;
	at wyil.interpreter.ConcreteSemantics$RValue$Int.remainder(ConcreteSemantics.java:413)&#13;
	at wyil.interpreter.Interpreter.executeIntegerRemainder(Interpreter.java:917)&#13;
	at quickcheck.QCInterpreter.executeExpression(QCInterpreter.java:873)&#13;
	at quickcheck.QCInterpreter.executeMultiReturnExpression(QCInterpreter.java:1151)&#13;
	at quickcheck.QCInterpreter.executeExpressions(QCInterpreter.java:1114)&#13;
	at quickcheck.QCInterpreter.executeReturn(QCInterpreter.java:708)&#13;
	at quickcheck.QCInterpreter.executeStatement(QCInterpreter.java:466)&#13;
	at quickcheck.QCInterpreter.executeBlock(QCInterpreter.java:415)&#13;
	at quickcheck.QCInterpreter.execute(QCInterpreter.java:344)&#13;
	at quickcheck.RunTest.executeTest(RunTest.java:218)&#13;
	at quickcheck.RunTest.execute(RunTest.java:111)&#13;
	at test.utils.TestHelper.createRunTest(TestHelper.java:133)&#13;
	at test.quickcheck.WhileyInvalidTest.invalid(WhileyInvalidTest.java:140)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</error>
      </testcase>
    </testsuite>
    <testsuite name="[Remainder_Invalid_2]" time="0.014">
      <testcase name="invalid[Remainder_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Remainder_Invalid_3]" time="0.014">
      <testcase name="invalid[Remainder_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Requires_Invalid_1]" time="0.113">
      <testcase name="invalid[Requires_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.113"/>
    </testsuite>
    <testsuite name="[Return_Invalid_1]" time="0.018">
      <testcase name="invalid[Return_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.018"/>
    </testsuite>
    <testsuite name="[Return_Invalid_10]" time="0.016">
      <testcase name="invalid[Return_Invalid_10]" classname="test.quickcheck.WhileyInvalidTest" time="0.016"/>
    </testsuite>
    <testsuite name="[Return_Invalid_11]" time="0.0">
      <testcase name="invalid[Return_Invalid_11]" classname="test.quickcheck.WhileyInvalidTest" time="0.0"/>
    </testsuite>
    <testsuite name="[Return_Invalid_12]" time="0.0">
      <testcase name="invalid[Return_Invalid_12]" classname="test.quickcheck.WhileyInvalidTest" time="0.0"/>
    </testsuite>
    <testsuite name="[Return_Invalid_2]" time="0.0">
      <testcase name="invalid[Return_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.0"/>
    </testsuite>
    <testsuite name="[Return_Invalid_3]" time="0.016">
      <testcase name="invalid[Return_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.016"/>
    </testsuite>
    <testsuite name="[Return_Invalid_4]" time="0.015">
      <testcase name="invalid[Return_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[Return_Invalid_5]" time="0.017">
      <testcase name="invalid[Return_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.017"/>
    </testsuite>
    <testsuite name="[Return_Invalid_6]" time="0.022">
      <testcase name="invalid[Return_Invalid_6]" classname="test.quickcheck.WhileyInvalidTest" time="0.022"/>
    </testsuite>
    <testsuite name="[Return_Invalid_7]" time="0.016">
      <testcase name="invalid[Return_Invalid_7]" classname="test.quickcheck.WhileyInvalidTest" time="0.016"/>
    </testsuite>
    <testsuite name="[Return_Invalid_8]" time="0.013">
      <testcase name="invalid[Return_Invalid_8]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Return_Invalid_9]" time="0.014">
      <testcase name="invalid[Return_Invalid_9]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[StaticVar_Invalid_1]" time="0.013">
      <testcase name="invalid[StaticVar_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[StaticVar_Invalid_2]" time="0.013">
      <testcase name="invalid[StaticVar_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[StaticVar_Invalid_3]" time="0.013">
      <testcase name="invalid[StaticVar_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[StaticVar_Invalid_4]" time="0.013">
      <testcase name="invalid[StaticVar_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[StaticVar_Invalid_5]" time="0.042">
      <testcase name="invalid[StaticVar_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.042"/>
    </testsuite>
    <testsuite name="[StaticVar_Invalid_6]" time="0.013">
      <testcase name="invalid[StaticVar_Invalid_6]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[StaticVar_Invalid_7]" time="0.012">
      <testcase name="invalid[StaticVar_Invalid_7]" classname="test.quickcheck.WhileyInvalidTest" time="0.012"/>
    </testsuite>
    <testsuite name="[StaticVar_Invalid_8]" time="0.013">
      <testcase name="invalid[StaticVar_Invalid_8]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[StaticVar_Invalid_9]" time="0.013">
      <testcase name="invalid[StaticVar_Invalid_9]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Subtype_Invalid_1]" time="0.055">
      <testcase name="invalid[Subtype_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.055"/>
    </testsuite>
    <testsuite name="[Subtype_Invalid_2]" time="0.105">
      <testcase name="invalid[Subtype_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.105"/>
    </testsuite>
    <testsuite name="[Subtype_Invalid_3]" time="0.051">
      <testcase name="invalid[Subtype_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.051"/>
    </testsuite>
    <testsuite name="[Subtype_Invalid_4]" time="0.054">
      <testcase name="invalid[Subtype_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.054"/>
    </testsuite>
    <testsuite name="[Subtype_Invalid_5]" time="0.061">
      <testcase name="invalid[Subtype_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.061"/>
    </testsuite>
    <testsuite name="[Subtype_Invalid_6]" time="0.067">
      <testcase name="invalid[Subtype_Invalid_6]" classname="test.quickcheck.WhileyInvalidTest" time="0.067"/>
    </testsuite>
    <testsuite name="[Subtype_Invalid_7]" time="0.06">
      <testcase name="invalid[Subtype_Invalid_7]" classname="test.quickcheck.WhileyInvalidTest" time="0.06"/>
    </testsuite>
    <testsuite name="[Subtype_Invalid_8]" time="0.093">
      <testcase name="invalid[Subtype_Invalid_8]" classname="test.quickcheck.WhileyInvalidTest" time="0.093"/>
    </testsuite>
    <testsuite name="[Subtype_Invalid_9]" time="0.094">
      <testcase name="invalid[Subtype_Invalid_9]" classname="test.quickcheck.WhileyInvalidTest" time="0.094"/>
    </testsuite>
    <testsuite name="[Switch_Invalid_1]" time="0.015">
      <testcase name="invalid[Switch_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[Switch_Invalid_2]" time="0.014">
      <testcase name="invalid[Switch_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Switch_Invalid_3]" time="0.014">
      <testcase name="invalid[Switch_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Switch_Invalid_4]" time="0.014">
      <testcase name="invalid[Switch_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Switch_Invalid_5]" time="0.024">
      <testcase name="invalid[Switch_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.024"/>
    </testsuite>
    <testsuite name="[Switch_Invalid_6]" time="0.019">
      <testcase name="invalid[Switch_Invalid_6]" classname="test.quickcheck.WhileyInvalidTest" time="0.019"/>
    </testsuite>
    <testsuite name="[Switch_Invalid_7]" time="0.027">
      <testcase name="invalid[Switch_Invalid_7]" classname="test.quickcheck.WhileyInvalidTest" time="0.027"/>
    </testsuite>
    <testsuite name="[TupleAssign_Invalid_1]" time="0.079">
      <testcase name="invalid[TupleAssign_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.079"/>
    </testsuite>
    <testsuite name="[TupleAssign_Invalid_2]" time="0.069">
      <testcase name="invalid[TupleAssign_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.069"/>
    </testsuite>
    <testsuite name="[TupleAssign_Invalid_3]" time="0.055">
      <testcase name="invalid[TupleAssign_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.055"/>
    </testsuite>
    <testsuite name="[TupleDefine_Invalid_1]" time="0.013">
      <testcase name="invalid[TupleDefine_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[TupleDefine_Invalid_2]" time="0.059">
      <testcase name="invalid[TupleDefine_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.059"/>
    </testsuite>
    <testsuite name="[Tuple_Invalid_3]" time="0.093">
      <testcase name="invalid[Tuple_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.093"/>
    </testsuite>
    <testsuite name="[Tuple_Invalid_4]" time="0.086">
      <testcase name="invalid[Tuple_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.086"/>
    </testsuite>
    <testsuite name="[Tuple_Invalid_5]" time="0.084">
      <testcase name="invalid[Tuple_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.084"/>
    </testsuite>
    <testsuite name="[Tuple_Invalid_6]" time="0.02">
      <testcase name="invalid[Tuple_Invalid_6]" classname="test.quickcheck.WhileyInvalidTest" time="0.02"/>
    </testsuite>
    <testsuite name="[Tuple_Invalid_7]" time="0.02">
      <testcase name="invalid[Tuple_Invalid_7]" classname="test.quickcheck.WhileyInvalidTest" time="0.02"/>
    </testsuite>
    <testsuite name="[TypeEquals_Invalid_1]" time="0.017">
      <testcase name="invalid[TypeEquals_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.017"/>
    </testsuite>
    <testsuite name="[TypeEquals_Invalid_10]" time="0.016">
      <testcase name="invalid[TypeEquals_Invalid_10]" classname="test.quickcheck.WhileyInvalidTest" time="0.016"/>
    </testsuite>
    <testsuite name="[TypeEquals_Invalid_11]" time="0.016">
      <testcase name="invalid[TypeEquals_Invalid_11]" classname="test.quickcheck.WhileyInvalidTest" time="0.016"/>
    </testsuite>
    <testsuite name="[TypeEquals_Invalid_12]" time="0.055">
      <testcase name="invalid[TypeEquals_Invalid_12]" classname="test.quickcheck.WhileyInvalidTest" time="0.055"/>
    </testsuite>
    <testsuite name="[TypeEquals_Invalid_13]" time="0.014">
      <testcase name="invalid[TypeEquals_Invalid_13]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[TypeEquals_Invalid_2]" time="0.012">
      <testcase name="invalid[TypeEquals_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.012"/>
    </testsuite>
    <testsuite name="[TypeEquals_Invalid_5]" time="0.07">
      <testcase name="invalid[TypeEquals_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.07"/>
    </testsuite>
    <testsuite name="[TypeEquals_Invalid_6]" time="0.066">
      <testcase name="invalid[TypeEquals_Invalid_6]" classname="test.quickcheck.WhileyInvalidTest" time="0.066"/>
    </testsuite>
    <testsuite name="[TypeEquals_Invalid_7]" time="0.014">
      <testcase name="invalid[TypeEquals_Invalid_7]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[TypeEquals_Invalid_8]" time="0.015">
      <testcase name="invalid[TypeEquals_Invalid_8]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[TypeEquals_Invalid_9]" time="0.016">
      <testcase name="invalid[TypeEquals_Invalid_9]" classname="test.quickcheck.WhileyInvalidTest" time="0.016"/>
    </testsuite>
    <testsuite name="[Type_Invalid_1]" time="0.016">
      <testcase name="invalid[Type_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.016"/>
    </testsuite>
    <testsuite name="[Type_Invalid_10]" time="0.001">
      <testcase name="invalid[Type_Invalid_10]" classname="test.quickcheck.WhileyInvalidTest" time="0.001">
        <skipped>org.junit.AssumptionViolatedException: Test Type_Invalid_10 skipped: 823&#13;
	at org.junit.Assume.assumeTrue(Assume.java:59)&#13;
	at test.quickcheck.WhileyInvalidTest.beforeMethod(WhileyInvalidTest.java:107)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</skipped>
      </testcase>
    </testsuite>
    <testsuite name="[Type_Invalid_11]" time="0.0">
      <testcase name="invalid[Type_Invalid_11]" classname="test.quickcheck.WhileyInvalidTest" time="0.0">
        <skipped>org.junit.AssumptionViolatedException: Test Type_Invalid_11 skipped: 793&#13;
	at org.junit.Assume.assumeTrue(Assume.java:59)&#13;
	at test.quickcheck.WhileyInvalidTest.beforeMethod(WhileyInvalidTest.java:107)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</skipped>
      </testcase>
    </testsuite>
    <testsuite name="[Type_Invalid_2]" time="0.019">
      <testcase name="invalid[Type_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.019"/>
    </testsuite>
    <testsuite name="[Type_Invalid_3]" time="0.014">
      <testcase name="invalid[Type_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Type_Invalid_4]" time="0.014">
      <testcase name="invalid[Type_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[Type_Invalid_5]" time="0.018">
      <testcase name="invalid[Type_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.018"/>
    </testsuite>
    <testsuite name="[Type_Invalid_6]" time="0.02">
      <testcase name="invalid[Type_Invalid_6]" classname="test.quickcheck.WhileyInvalidTest" time="0.02"/>
    </testsuite>
    <testsuite name="[Type_Invalid_7]" time="0.015">
      <testcase name="invalid[Type_Invalid_7]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[Type_Invalid_8]" time="0.013">
      <testcase name="invalid[Type_Invalid_8]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[Type_Invalid_9]" time="0.0">
      <testcase name="invalid[Type_Invalid_9]" classname="test.quickcheck.WhileyInvalidTest" time="0.0"/>
    </testsuite>
    <testsuite name="[UnionType_Invalid_1]" time="0.0">
      <testcase name="invalid[UnionType_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.0"/>
    </testsuite>
    <testsuite name="[UnionType_Invalid_10]" time="0.023">
      <testcase name="invalid[UnionType_Invalid_10]" classname="test.quickcheck.WhileyInvalidTest" time="0.023"/>
    </testsuite>
    <testsuite name="[UnionType_Invalid_11]" time="0.015">
      <testcase name="invalid[UnionType_Invalid_11]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[UnionType_Invalid_12]" time="0.014">
      <testcase name="invalid[UnionType_Invalid_12]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[UnionType_Invalid_13]" time="0.015">
      <testcase name="invalid[UnionType_Invalid_13]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[UnionType_Invalid_14]" time="0.015">
      <testcase name="invalid[UnionType_Invalid_14]" classname="test.quickcheck.WhileyInvalidTest" time="0.015"/>
    </testsuite>
    <testsuite name="[UnionType_Invalid_15]" time="0.014">
      <testcase name="invalid[UnionType_Invalid_15]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[UnionType_Invalid_2]" time="0.013">
      <testcase name="invalid[UnionType_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[UnionType_Invalid_3]" time="0.013">
      <testcase name="invalid[UnionType_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[UnionType_Invalid_4]" time="0.013">
      <testcase name="invalid[UnionType_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[UnionType_Invalid_5]" time="0.013">
      <testcase name="invalid[UnionType_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[UnionType_Invalid_6]" time="0.013">
      <testcase name="invalid[UnionType_Invalid_6]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[UnionType_Invalid_7]" time="0.071">
      <testcase name="invalid[UnionType_Invalid_7]" classname="test.quickcheck.WhileyInvalidTest" time="0.071"/>
    </testsuite>
    <testsuite name="[UnionType_Invalid_8]" time="0.053">
      <testcase name="invalid[UnionType_Invalid_8]" classname="test.quickcheck.WhileyInvalidTest" time="0.053"/>
    </testsuite>
    <testsuite name="[UnionType_Invalid_9]" time="0.088">
      <testcase name="invalid[UnionType_Invalid_9]" classname="test.quickcheck.WhileyInvalidTest" time="0.088"/>
    </testsuite>
    <testsuite name="[VarDecl_Invalid_1]" time="0.013">
      <testcase name="invalid[VarDecl_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[VarDecl_Invalid_2]" time="0.052">
      <testcase name="invalid[VarDecl_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.052">
        <error>java.lang.ArithmeticException: BigInteger divide by zero&#13;
	at java.base/java.math.MutableBigInteger.divideKnuth(Unknown Source)&#13;
	at java.base/java.math.BigInteger.divideKnuth(Unknown Source)&#13;
	at java.base/java.math.BigInteger.divide(Unknown Source)&#13;
	at wyil.interpreter.ConcreteSemantics$RValue$Int.divide(ConcreteSemantics.java:407)&#13;
	at wyil.interpreter.Interpreter.executeIntegerDivision(Interpreter.java:911)&#13;
	at quickcheck.QCInterpreter.executeExpression(QCInterpreter.java:870)&#13;
	at quickcheck.QCInterpreter.executeVariableDeclaration(QCInterpreter.java:776)&#13;
	at quickcheck.QCInterpreter.executeStatement(QCInterpreter.java:473)&#13;
	at quickcheck.QCInterpreter.executeBlock(QCInterpreter.java:415)&#13;
	at quickcheck.QCInterpreter.execute(QCInterpreter.java:344)&#13;
	at quickcheck.RunTest.executeTest(RunTest.java:218)&#13;
	at quickcheck.RunTest.execute(RunTest.java:111)&#13;
	at test.utils.TestHelper.createRunTest(TestHelper.java:133)&#13;
	at test.quickcheck.WhileyInvalidTest.invalid(WhileyInvalidTest.java:140)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</error>
      </testcase>
    </testsuite>
    <testsuite name="[VarDecl_Invalid_3]" time="0.013">
      <testcase name="invalid[VarDecl_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[VarDecl_Invalid_4]" time="0.037">
      <testcase name="invalid[VarDecl_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.037"/>
    </testsuite>
    <testsuite name="[While_Invalid_1]" time="0.014">
      <testcase name="invalid[While_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[While_Invalid_10]" time="0.024">
      <testcase name="invalid[While_Invalid_10]" classname="test.quickcheck.WhileyInvalidTest" time="0.024">
        <error>java.lang.ArrayIndexOutOfBoundsException: 0&#13;
	at wyil.interpreter.ConcreteSemantics$RValue$Array.write(ConcreteSemantics.java:498)&#13;
	at wyil.interpreter.ConcreteSemantics$LValue$Array.write(ConcreteSemantics.java:837)&#13;
	at quickcheck.QCInterpreter.executeAssign(QCInterpreter.java:491)&#13;
	at quickcheck.QCInterpreter.executeStatement(QCInterpreter.java:441)&#13;
	at quickcheck.QCInterpreter.executeBlock(QCInterpreter.java:415)&#13;
	at quickcheck.QCInterpreter.executeWhile(QCInterpreter.java:680)&#13;
	at quickcheck.QCInterpreter.executeStatement(QCInterpreter.java:464)&#13;
	at quickcheck.QCInterpreter.executeBlock(QCInterpreter.java:415)&#13;
	at quickcheck.QCInterpreter.execute(QCInterpreter.java:344)&#13;
	at quickcheck.RunTest.executeTest(RunTest.java:218)&#13;
	at quickcheck.RunTest.execute(RunTest.java:111)&#13;
	at test.utils.TestHelper.createRunTest(TestHelper.java:133)&#13;
	at test.quickcheck.WhileyInvalidTest.invalid(WhileyInvalidTest.java:133)&#13;
	at jdk.internal.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)&#13;
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
	at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)&#13;
&#13;
</error>
      </testcase>
    </testsuite>
    <testsuite name="[While_Invalid_11]" time="0.062">
      <testcase name="invalid[While_Invalid_11]" classname="test.quickcheck.WhileyInvalidTest" time="0.062"/>
    </testsuite>
    <testsuite name="[While_Invalid_12]" time="0.048">
      <testcase name="invalid[While_Invalid_12]" classname="test.quickcheck.WhileyInvalidTest" time="0.048"/>
    </testsuite>
    <testsuite name="[While_Invalid_13]" time="0.065">
      <testcase name="invalid[While_Invalid_13]" classname="test.quickcheck.WhileyInvalidTest" time="0.064"/>
    </testsuite>
    <testsuite name="[While_Invalid_14]" time="0.013">
      <testcase name="invalid[While_Invalid_14]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[While_Invalid_15]" time="0.058">
      <testcase name="invalid[While_Invalid_15]" classname="test.quickcheck.WhileyInvalidTest" time="0.058"/>
    </testsuite>
    <testsuite name="[While_Invalid_16]" time="0.006">
      <testcase name="invalid[While_Invalid_16]" classname="test.quickcheck.WhileyInvalidTest" time="0.006"/>
    </testsuite>
    <testsuite name="[While_Invalid_17]" time="0.065">
      <testcase name="invalid[While_Invalid_17]" classname="test.quickcheck.WhileyInvalidTest" time="0.065"/>
    </testsuite>
    <testsuite name="[While_Invalid_18]" time="0.063">
      <testcase name="invalid[While_Invalid_18]" classname="test.quickcheck.WhileyInvalidTest" time="0.063"/>
    </testsuite>
    <testsuite name="[While_Invalid_19]" time="0.068">
      <testcase name="invalid[While_Invalid_19]" classname="test.quickcheck.WhileyInvalidTest" time="0.068"/>
    </testsuite>
    <testsuite name="[While_Invalid_2]" time="0.014">
      <testcase name="invalid[While_Invalid_2]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[While_Invalid_20]" time="0.117">
      <testcase name="invalid[While_Invalid_20]" classname="test.quickcheck.WhileyInvalidTest" time="0.117"/>
    </testsuite>
    <testsuite name="[While_Invalid_21]" time="0.137">
      <testcase name="invalid[While_Invalid_21]" classname="test.quickcheck.WhileyInvalidTest" time="0.137"/>
    </testsuite>
    <testsuite name="[While_Invalid_22]" time="0.121">
      <testcase name="invalid[While_Invalid_22]" classname="test.quickcheck.WhileyInvalidTest" time="0.121"/>
    </testsuite>
    <testsuite name="[While_Invalid_23]" time="0.115">
      <testcase name="invalid[While_Invalid_23]" classname="test.quickcheck.WhileyInvalidTest" time="0.115"/>
    </testsuite>
    <testsuite name="[While_Invalid_3]" time="0.013">
      <testcase name="invalid[While_Invalid_3]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[While_Invalid_4]" time="0.013">
      <testcase name="invalid[While_Invalid_4]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[While_Invalid_5]" time="0.014">
      <testcase name="invalid[While_Invalid_5]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
    <testsuite name="[While_Invalid_6]" time="0.013">
      <testcase name="invalid[While_Invalid_6]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[While_Invalid_7]" time="0.061">
      <testcase name="invalid[While_Invalid_7]" classname="test.quickcheck.WhileyInvalidTest" time="0.061"/>
    </testsuite>
    <testsuite name="[While_Invalid_8]" time="0.057">
      <testcase name="invalid[While_Invalid_8]" classname="test.quickcheck.WhileyInvalidTest" time="0.057"/>
    </testsuite>
    <testsuite name="[While_Invalid_9]" time="0.013">
      <testcase name="invalid[While_Invalid_9]" classname="test.quickcheck.WhileyInvalidTest" time="0.013"/>
    </testsuite>
    <testsuite name="[XOR_Invalid_1]" time="0.014">
      <testcase name="invalid[XOR_Invalid_1]" classname="test.quickcheck.WhileyInvalidTest" time="0.014"/>
    </testsuite>
  </testsuite>
</testrun>
